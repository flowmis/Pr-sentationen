#+TITLE: Readme

* Info Passwortsicherung

- Passwortsicherung ist nur kleine Hürde, da Inhalt theoretisch durch mein öffentlichen github Account einsehbar ist, oder durch direkteingabe des Links erreicht werden kann, aber für dullier, die nur den Link haben bringt es schon etwas Sicherheit
- Wie funktioniert die Passwortsicherung:
  - index.html in /root der repo hat eine form zum ausfüllen mit Passwörtern
  - von dem jeweils eingegebenen Passwort wird ein hash SHA1 gebildet und gecheckt ob dieser mit dem Ordner im /root Verzeichnis übereinstimmt
  - ist dem der Fall erfolgt die Weiterleitung zu der übersicht.html in diesem Ordner der nach dem Hash des Passworts benannt ist
  - zum ändern des Passworts einfach das neue Passwort in die index.html im /root Ordner eingeben (muss halt rendern - kann ich durch github pages machen oder auch anders) -> dann kommt nach der Eingabe dass das Passwort falsch war und in der Adressleiste steht der Hash des eingegebenen Passworts -> diesen hinter dem # Zeichen kopieren und den Ordner nach dem Hash umbenennen -> nun wurde das Passwort geändert und man kann mit dem neuen Passwort auf den Ordner zugreifen! -> Idee/Form kam von [[https://github.com/chrissy-dev/protected-github-pages][hier]]

* Einrichtung von org-reveal

+ _Was ist hiermit möglich?_ - siehe Demo Präsentation: https://revealjs.com/demo/

+ _Installation_

  - *packages.el*: Hinzufügen von (package! ox-reveal) (packages.el in doom emacs config Ordner zu finden)
  - *doomsync* ausführen sodass Modul installiert wird und alles up to date ist
  - *config.el*: Im selben Ordner wie packages.el und init.el um folgenden Code ergänzen
  - *Achtung:* Der hier angegebene Pfad zu reveal muss vorhanden sein (git clone meiner pres repo nötig und Ordnerstruktur muss stimmen!)

    #+begin_src emacs-lisp
    (use-package ox-reveal
    :ensure ox-reveal)
    (setq org-reveal-root "file:///home/flowmi/Git/pres/reveal") ;"https://cdn.jsdelivr.net/npm/reveal.js" -> ist online Pfad falls offline nicht geht oder Pfadangabe auf anderen Betriebssystemen Probleme machen
    ;(setq org-reveal-mathjax t)    ;math type ermöglicht - genauer einlesen
    (use-package htmlize
    :ensure t)                    ;sorgt dafür dass Syntax highlighting etc in der HTML angezeigt wird ----beim evaluieren kommt aber irgendwie dass es ignoriert wird also kein Plan?
    #+end_src
  - *Alternative:* Auch möglich aber schlechter Weg (da keine Updates und nicht übertragen auf andere EMACS installationen): <M-x package install>

* Einstellungen in der Datei

- folgenden Block an Start des Dokuments das eine Präsentation werden soll
:REVEAL_PROPERTIES:
#+REVEAL_ROOT: file:///home/flowmi/Git/pres/reveal
#+REVEAL_REVEAL_JS_VERSION: 4
#+REVEAL_THEME: serif
#+OPTIONS: timestamp:nil toc:1 num:nil
:END:

+ _Allgemeines_

  - =timestamp:nil= weglassen oder auf t setzen um den Zeitpunkt an dem Präsi generiert wurde nicht auf Slide anzuzeigen
  - =toc:1= setzt die Tiefe an Unterpunkten die bei der Gliederung angezeigt werden - je nachdem wie große und wie viele Unterpunkte man hat hier auswählen was man in toc haben will
  - =num:nil= entfernt die Nummerierung der Header und macht so ein cleaneren look
  - =Properties/Attributes= kann man auch nur für bestimmte Slides setzen (direkt unter Slideheader)
    #+ATTR_REVEAL: :frag (appear)
    Macht nach und nach einblenden von Stichpunkten. Gibt hier viele coole Möglichkeiten siehe Hompage von reveal
  - =Bild= hinzufügen lokal(Achtung Pfad vll nicht wie normal über //home//... sondern /file:///home//...) oder über Internetquellen (z.B. Github Seite)
    #+ATTR_HTML: :width 45% :align center        <- Größe und Positionierung des Bilds einstellen
  - =Video= <video data-autoplay src="http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4"></video>
    -> Autoplay funktioniert noch nicht und ist auch nicht eingebettet das Video - abchecken wie es besser geht
    + =SpeakerNotes= kann man einer Präsentation (Slide) über folgenden Block hinzufügen
     #+BEGIN_NOTES
     hier kann man Notizen reinmachen, die Zeit die man einstellt läuft herunter, die echte Zeit wird angezeigt und die nächste Folie die kommt wenn man Space drückt...
     1. blablabla
     #+END_NOTES
  - =H1= werden zu =Hauptslides=
  - =H2= werden zu =Subslides=
  - =H3= sind ebenfalls Subsildes ...
  - theme, frag(ment), layouts, animationen, Kommentare/SpeakerView, vids,... siehe: https://revealjs.com/

+ _Navigation in der Präsentation_

  - =Overview Slides:= ESC oder o für Overview
  - =SpeakerNotes:= s
  - =Zoom:= Strg + Klick
  - =Navigation:= Pfeiltasten
  - =Schritt für Schritt= alle Folien gehen und nach und nach Stichpunkte rein: Space

+ _Exportieren_

  1. <M-x org-export-dispatch> oder <SPC me>
  2. Export to reveal.js HTML Presentation auswählen

+ _Sonstiges_

  1. weitere wichtige Links:
     https://revealjs.com/
     https://github.com/yjwen/org-reveal/
  2. Wenn einem etwas nicht gefällt kann man auch einfach einen funktionierenden html Block in die Datei einfügen und dieser wird dann unverändert und funktionsfähig mit exportiert :)
  3. Mit org-capture arbeiten und wichtige Codeschnipsel machen sodass ich meine Unterrichtspräsentationen easy erstellen und bearbeiten kann
  4. rawgit und pages.github.com kann files im Browser wiedergeben und vll anfallende Probleme lösen
  5. Es macht Sinn meine Präsentationen in öffentliches Github Repo zu stellen dann kann ich wenn ich die URL auswendig drauf hab überall meine Präsentationen abrufen indem ich einfach den Link eingebe :) - scheinbar muss man github pages in der Repo aktivieren -> In Repo gehen und auf Settings und unter GitHub Pages die Source auf Main/Master branch stellen und (gegebenenfalls direkt dort Theme einstellen?) in die html Datei muss nun die reveal source (#+REVEAL_ROOT: siehe GithubPage zu Reveal für aktuellen Link) direkt rein (hilft also hier jetzt nicht wenn man im OrgMode es nur als Modul reingeschrieben hat und es im Header dann weglässt)
